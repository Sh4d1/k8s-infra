---
- name: Gather facts
  setup:

- name: Make sure /etc/kubernetes folder exists
  file:
    path: /etc/kubernetes/
    state: directory
    mode: '0755'

- name: Make sure /etc/kubernetes/manifests folder exists
  file:
    path: /etc/kubernetes/manifests
    state: directory
    mode: '0755'

- name: Make sure /etc/kubernetes/kustomize folder exists
  file:
    path: /etc/kubernetes/kustomize
    state: directory
    mode: '0755'

- name: Check if kubelet is running
  command: pgrep kubelet
  register: kubelet_first_master_status
  check_mode: no
  when:
  - inventory_hostname in groups['kube-master'][0]
  failed_when: False
  changed_when: False

- name: Create bootstrap token
  set_fact:
    BOOTSTRAP_TOKEN: "{{ ((999999999999999999999 | random | string + (lookup('pipe', 'date +%s%N'))) | to_uuid() | b64encode | lower)[:6] }}.{{ ((999999999999999999999 | random | string + (lookup('pipe', 'date +%s%N'))) | to_uuid() | b64encode | lower)[:16] }}"
    CERT_KEY: "{{ (999999999999999999999 | random | string + (lookup('pipe', 'date +%s%N'))) | to_uuid() | hash('sha256') }}"
  when:
  - inventory_hostname in groups['kube-master'][0]

- name: Create bootstrap token
  set_fact:
    BOOTSTRAP_TOKEN: "{{ hostvars[groups['kube-master'][0]]['BOOTSTRAP_TOKEN'] }}"
    CERT_KEY: "{{ hostvars[groups['kube-master'][0]]['CERT_KEY'] }}"
  when:
  - inventory_hostname not in groups['kube-master'][0]

- name: Ensure old patches are removed
  file:
    path: "/etc/kubernetes/kustomize/{{ item }}"
    state: absent
  with_items:
    - kube-apiserver.yml
    - kube-apiserver.yaml
    - kube-apiserver+merge.yaml
    - kube-controller-manager.yml
    - kube-controller-manager.yaml
    - kube-controller-manager+merge.yaml
    - kube-scheduler.yml
    - kube-scheduler.yaml
    - kube-scheduler+merge.yaml
    - etcd.yml
    - etcd.yaml
    - etcd+merge.yaml
    - kustomize-patch-first-etcd.yml
    - kustomize-patch-first-etcd.yaml
    - kustomize-patch-first-etcd+merge.yaml
    - kustomize-patch-join-etcd.yml
    - kustomize-patch-join-etcd.yaml
    - kustomize-patch-join-etcd+merge.yaml

- name: Create kustomize patch for kube-apiserver
  template:
    src: kube-apiserver.yaml.j2
    dest: /etc/kubernetes/kustomize/kube-apiserver+strategic.yaml
    force: yes
  register: apiserver

- name: Create kustomize patch for kube-controller-manager
  template:
    src: kube-controller-manager.yaml.j2
    dest: /etc/kubernetes/kustomize/kube-controller-manager+strategic.yaml
    force: yes
  register: controller_manager

- name: Create kustomize patch for kube-scheduler
  template:
    src: kube-scheduler.yaml.j2
    dest: /etc/kubernetes/kustomize/kube-scheduler+strategic.yaml
    force: yes
  register: scheduler

- name: Create kustomize patch for first etcd node
  template:
    src: kustomize-patch-first-etcd.yaml.j2
    dest: /etc/kubernetes/kustomize/etcd+strategic.yaml
    force: yes
  register: etcd
  when:
  - inventory_hostname in groups['kube-master'][0]

- name: Get Kubernetes version if running
  shell: "kubectl version -o json | jq -r '.serverVersion.gitVersion'"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  args:
    executable: /bin/bash
  register: running_kubernetes_version
  check_mode: no
  changed_when: False
  ignore_errors: yes

- name: Create kubeadm-master.conf
  template:
    src: kubeadm-master.conf.j2
    dest: /etc/kubernetes/kubeadm-master.conf
  when:
  - inventory_hostname in groups['kube-master'][0]
  - etcd.changed or apiserver.changed or controller_manager.changed or scheduler.changed or running_kubernetes_version.stdout | default('v' + kubernetes_version) != 'v' + kubernetes_version
  register: master_conf

- name: Create /etc/kubernetes/kubeadm-master.conf on secondary masters
  template:
    src: kubeadm-join-master.conf.j2
    dest: /etc/kubernetes/kubeadm-master.conf
  when:
  - inventory_hostname not in groups['kube-master'][0]
  - etcd.changed or apiserver.changed or controller_manager.changed or scheduler.changed or running_kubernetes_version.stdout | default('v' + kubernetes_version) != 'v' + kubernetes_version
  register: secondary_conf

- name: Backup old apiserver certificates on masters
  copy:
    src: "/etc/kubernetes/pki/{{ item }}"
    dest: "/etc/kubernetes/pki/{{ item }}.old"
    remote_src: yes
  with_items:
  - "apiserver.crt"
  - "apiserver.key"
  when:
  - master_conf.changed or secondary_conf.changed
  - "running_kubernetes_version.stderr == ''"

- name: Remove old apiserver certificates on masters
  file:
    path: "/etc/kubernetes/pki/{{ item }}"
    state: absent
  with_items:
  - "apiserver.crt"
  - "apiserver.key"
  when:
  - master_conf.changed or secondary_conf.changed
  - "running_kubernetes_version.stderr == ''"

- name: Update api server certificates on masters
  command: > 
    kubeadm init phase certs apiserver
    --config /etc/kubernetes/kubeadm-master.conf
  tags:
  - config
  when:
  - master_conf.changed or secondary_conf.changed
  - "running_kubernetes_version.stderr == ''"

# ugly way (https://github.com/ansible/ansible/issues/12170)
# may need to refacto
- name: Upgrade masters
  include_role: 
    name: kube-upgrade-master
  with_items: "{{ groups['kube-master'] | map('extract', hostvars, 'inventory_hostname') }}"
  loop_control:
    loop_var: host_item
  when: 
    - "running_kubernetes_version.stderr == ''"
    - "running_kubernetes_version.stdout | default('v' + kubernetes_version) != 'v' + kubernetes_version"
    - "host_item == inventory_hostname"

- name: Write static pod manifests on primary master # need to changes `-k` to --experimental-patches on next minor
  block:
  - name: Handle old way
    command: > 
      kubeadm init phase control-plane all
      -k /etc/kubernetes/kustomize/ 
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname in groups['kube-master'][0]
    - master_conf.changed
  rescue:
  - name: Handle new way
    command: > 
      kubeadm init phase control-plane all
      --experimental-patches /etc/kubernetes/kustomize/ 
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname in groups['kube-master'][0]
    - master_conf.changed

- name: Write static etcd pod manifests on primary master # need to changes `-k` to --experimental-patches on next minor
  block:
  - name: Handle old way
    command: > 
      kubeadm init phase etcd local
      -k /etc/kubernetes/kustomize/ 
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname in groups['kube-master'][0]
  rescue:
  - name: Handle new way
    command: > 
      kubeadm init phase etcd local
      --experimental-patches /etc/kubernetes/kustomize/ 
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname in groups['kube-master'][0]
  when:
  - etcd.changed

- name: Initialize cluster on primary master with kubeadm init --config /etc/kubernetes/kubeadm-master.conf --upload-certs
  command: >
    kubeadm init
    --config /etc/kubernetes/kubeadm-master.conf
    --upload-certs
    --ignore-preflight-errors=FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Swap
    --skip-phases=addon/kube-proxy
    --experimental-patches /etc/kubernetes/kustomize/
  tags:
  - init
  when:
  - inventory_hostname in groups['kube-master'][0] and kubelet_first_master_status.stdout == ""

- name: Write static pod manifests on secondary masters # need to changes `-k` to --experimental-patches on next minor
  block:
  - name: Handle old way
    command: > 
      kubeadm init phase control-plane all
      -k /etc/kubernetes/kustomize/
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname not in groups['kube-master'][0]
    - secondary_conf.changed
  rescue:
  - name: Handle new way
    command: > 
      kubeadm init phase control-plane all
      --experimental-patches /etc/kubernetes/kustomize/
      --config /etc/kubernetes/kubeadm-master.conf
    tags:
    - config
    when:
    - inventory_hostname not in groups['kube-master'][0]
    - secondary_conf.changed

- name: Join masters
  include_tasks: join_master.yml
  with_indexed_items:
  - "{{ groups['kube-master'] }}"
  run_once: true

  #- name: Make sure /etc/kubernetes/kubeadm-master.conf is deleted
  #  file:
  #    path: /etc/kubernetes/kubeadm-master.conf
  #    state: absent

- name: Change kubelet address
  replace:
    path: "{{ item }}"
    regexp: "{{ hostvars[groups['kube-master'][0]][ansible_private_nic]['ipv4']['address'] }}"
    replace: "{{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}"
  with_items:
    - /var/lib/kubelet/config.yaml
    - /etc/kubernetes/admin.conf
    - /etc/kubernetes/controller-manager.conf
    - /etc/kubernetes/kubelet.conf
    - /etc/kubernetes/scheduler.conf
  register: kubelet_conf

- name: Set kubelet config
  lineinfile:
    path: /var/lib/kubelet/kubeadm-flags.env
    line: 'KUBELET_EXTRA_ARGS="--cloud-provider=external"'
  register: kubelet_extra_args

- name: Restart kubelet
  systemd:
    state: restarted
    name: kubelet
    enabled: true
  when:
  - kubelet_conf.changed or kubelet_extra_args.changed
