apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
  annotations:
    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
spec:
  containers:
  - name: kube-apiserver
    command:
    - kube-apiserver
    - --advertise-address={{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --bind-address={{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --enable-admission-plugins=NodeRestriction
    - --enable-bootstrap-token-auth=true
    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    - --insecure-port=0
    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
    - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --secure-port=6443
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
    - --service-cluster-ip-range={{ service_network_cidr }}
    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
        path: /livez
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
        path: /readyz
        port: 6443
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 48
      httpGet:
        host: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
        path: /livez
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
