apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
spec:
  containers:
  - name: kube-controller-manager
    command:
    - kube-controller-manager
    - --allocate-node-cidrs=true
    - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
    - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
    - --bind-address={{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --cluster-cidr={{ pod_network_cidr }}
    - --cluster-name={{ cluster_name }}
    - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
    - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
    - --controllers=*,bootstrapsigner,tokencleaner
    - --kubeconfig=/etc/kubernetes/controller-manager.conf
    - --leader-elect=true
    - --node-cidr-mask-size=24
    - --port=0
    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --root-ca-file=/etc/kubernetes/pki/ca.crt
    - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
    - --service-cluster-ip-range={{ service_network_cidr }}
    - --use-service-account-credentials=true
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
        path: /healthz
        port: 10257
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 48
      httpGet:
        host: {{ hostvars[inventory_hostname][ansible_private_nic]['ipv4']['address'] }}
        path: /healthz
        port: 10257
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
